<policies>
    <inbound>
        <base />
        <set-variable name="id" value="@(context.Request.MatchedParameters.GetValueOrDefault(&quot;id&quot;, &quot;&quot;))" />
        <choose>
            <when condition="@((string)context.Variables[&quot;id&quot;] == &quot;schema/&quot;)">
                <return-response>
                    <set-status code="302" reason="Found" />
                    <set-header name="Location" exists-action="override">
                        <value>https://api.parliament.uk/query/schema</value>
                    </set-header>
                </return-response>
            </when>
            <when condition="@(string.IsNullOrEmpty((string)context.Variables[&quot;id&quot;]))">
                <return-response>
                    <set-status code="400" reason="Bad Request" />
                    <set-header name="Content-Type" exists-action="override">
                        <value>text/plain</value>
                    </set-header>
                    <set-body>id.parliament.uk is the namespace for resources belonging to the Parliament of the United Kingdom.

URIs of known resources will be dereferenced to a canonical representation.
Resources are named &lt;https://id.parliament.uk/{id}&gt;.

Resources of interest:
- &lt;https://id.parliament.uk/schema&gt; - Ontology
- &lt;https://id.parliament.uk/schema/House&gt; - Class of Houses of Parliament
- &lt;https://id.parliament.uk/schema/Person&gt; - Class of MPs and Peers
- &lt;https://id.parliament.uk/schema/ParliamentPeriod&gt; - Class of Parliaments</set-body>
                </return-response>
            </when>
            <otherwise>
                <set-variable name="fixedQuery" value="https://api.parliament.uk/query/" />
                <set-variable name="namespace" value="https://id.parliament.uk/" />
                <set-variable name="resourceUri" value="@(string.Concat(context.Variables[&quot;namespace&quot;], context.Variables[&quot;id&quot;]))" />
                <set-variable name="exists" value="exists?uri=" />
                <send-request mode="new" response-variable-name="response" timeout="20" ignore-error="true">
                    <set-url>@(string.Concat(context.Variables["fixedQuery"], context.Variables["exists"], context.Variables["resourceUri"]))</set-url>
                    <set-method>GET</set-method>
                    <set-header name="Accept" exists-action="override">
                        <value>application/sparql-results+json</value>
                    </set-header>
                </send-request>
                <set-variable name="responseJson" value="@(((IResponse)context.Variables[&quot;response&quot;]).Body.As&lt;JObject&gt;())" />
                <set-variable name="resourceExists" value="@(((JObject)context.Variables[&quot;responseJson&quot;])[&quot;boolean&quot;].Value&lt;bool&gt;())" />
                <choose>
                    <when condition="@((bool)context.Variables[&quot;resourceExists&quot;])">
                        <set-variable name="resource" value="resource?uri=" />
                        <return-response>
                            <set-status code="303" reason="See Other" />
                            <set-header name="Strict-Transport-Security" exists-action="override">
                                <value>max-age=31536000</value>
                            </set-header>
                            <set-header name="Location" exists-action="override">
                                <value>@(string.Concat(context.Variables["fixedQuery"], context.Variables["resource"], context.Variables["resourceUri"]))</value>
                            </set-header>
                        </return-response>
                    </when>
                    <otherwise>
                        <return-response>
                            <set-status code="404" reason="Not Found" />
                            <set-header name="Content-Type" exists-action="override">
                                <value>text/plain</value>
                            </set-header>
                            <set-body>@("&lt;" + context.Variables["resourceUri"] + @"&gt; is not a known resource URI in the context of the UK Parliament.

Resources of interest:
- &lt;https://id.parliament.uk/schema&gt; - Ontology
- &lt;https://id.parliament.uk/schema/House&gt; - Class of Houses of Parliament
- &lt;https://id.parliament.uk/schema/Person&gt; - Class of MPs and Peers
- &lt;https://id.parliament.uk/schema/ParliamentPeriod&gt; - Class of Parliaments")</set-body>
                        </return-response>
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>